import * as forge from 'node-forge';
import { Format, convert } from './formatter';
import { asn1 } from './asn1';
type GetParams = {
    /**
     * The keychain to search.
     * Defaults to "all".
     */
    keychain?: 'all' | 'current' | 'SystemRootCertificates';
    /**
     * remove duplicated certificates
     * Defaults to true
     */
    unique?: Boolean;
    /**
     * Exclude node.js bundled root certificates.
     * Defaults to true.
     */
    excludeBundled?: Boolean;
    /**
     * The format to retrieve them
     * Defaults to "pem".
     */
    format?: Format;
};
export declare function get(params?: GetParams & {
    format: Format.pem | Format.txt | Format.fingerprint;
}): string[];
export declare function get(params?: GetParams & {
    format: Format.der;
}): forge.util.ByteStringBuffer[];
export declare function get(params?: GetParams & {
    format: Format.asn1;
}): asn1[];
export declare function get(params?: GetParams & {
    format: Format.x509;
}): forge.pki.Certificate[];
export declare function get(): string[];
type AddToGAType = Exclude<GetParams, 'format'>;
export declare const addToGlobalAgent: (params?: AddToGAType) => void;
export { Format, convert };
